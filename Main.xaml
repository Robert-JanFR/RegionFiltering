<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="772.8,1242.4" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="31">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="26">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="1. Read EmployeeDetails.xlsx, Employees Worksheet&#xA;2. Request manual input from user to enter Employee Region&#xA;3. Filter the values by employee Region entered by user. &#xA;4. Count the resulting rows and create a new excel worksheet with the name - &quot;&lt;Count&gt;&lt;Region name&gt;&quot; &#xA;5. In the new sheet created, write the resulting rows. Order the data in ascending order of City and Descending Order of Name&#xA;&#xA;NOTE:&#xA;• Follow coding standards – Naming Conventions, Workflow modularization, Annotations, etc&#xA;• Handle all exceptions you could think of.&#xA;&#xA;Enhancements:&#xA;• Create Configuration excel. Read input excel name, sheet name, output file path from configuration instead of hardcoding in the workflow." DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="376,1177.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dct_Config" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Employees" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="lst_UniqueRegions" />
      <Variable x:TypeArguments="x:String" Name="ChosenRegion" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Region filtering process started...&quot;]" />
    <Sequence sap2010:Annotation.AnnotationText="Loads config file as a dictionary.&#xD;&#xA;&#xD;&#xA;All entries in dct_Config:&#xD;&#xA;- EmployeeFilePath&#xD;&#xA;- EmployeeSheetName&#xD;&#xA;- OutpoutFilePath" DisplayName="Load Config file" sap:VirtualizedContainerService.HintSize="334,195.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dt_Config" />
        <Variable x:TypeArguments="x:String" Name="ConfigFilePath" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="437.6,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Loading Config File.&quot;]" />
      <Assign DisplayName="Assign config file path" sap:VirtualizedContainerService.HintSize="437.6,59.6" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[ConfigFilePath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">Config.xlsx</InArgument>
        </Assign.Value>
      </Assign>
      <TryCatch sap2010:Annotation.AnnotationText="Check if config file can be loaded, if not, throw IOException." DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="437.6,350.8" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <ui:ReadRange AddHeaders="True" DataTable="[dt_Config]" DisplayName="Load config file as dictionary" sap:VirtualizedContainerService.HintSize="334,87.2" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Settings" WorkbookPath="[ConfigFilePath]">
            <ui:ReadRange.Range>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:ReadRange.Range>
          </ui:ReadRange>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="si:IOException" sap:VirtualizedContainerService.HintSize="403.6,22.8" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="si:IOException">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="si:IOException" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[exception]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" />
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <Assign sap2010:Annotation.AnnotationText="Initialize empty dictionary for config file." DisplayName="Assign empty dictionary" sap:VirtualizedContainerService.HintSize="437.6,90.8" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dct_Config]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(Of String, String)]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Loop through dt_Config and assign every row to dct_Config." DataTable="[dt_Config]" DisplayName="For Each Row in dt_Config" sap:VirtualizedContainerService.HintSize="437.6,317.2" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304.4,151.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign config entries to dictionary" sap:VirtualizedContainerService.HintSize="262.4,59.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[dct_Config(Row("Name").ToString)]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Row("Value").ToString]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="437.6,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Config file loaded.&quot;]" />
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Loads Employees file in dt_Employees." DisplayName="Load Excel file" sap:VirtualizedContainerService.HintSize="334,113.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch sap2010:Annotation.AnnotationText="Check if Employees excel file can be loaded, if not, throw IOException." DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="437.6,395.6" sap2010:WorkflowViewState.IdRef="TryCatch_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <ui:ReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="Checks in Config dictionary for the file path of the Employees file." DataTable="[dt_Employees]" DisplayName="Load Employees as dt_Employees" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="[dct_Config(&quot;EmployeesSheetName&quot;)]" WorkbookPath="[dct_Config(&quot;EmployeesFilePath&quot;)]">
            <ui:ReadRange.Range>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:ReadRange.Range>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ReadRange>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="si:IOException" sap:VirtualizedContainerService.HintSize="403.6,22.8" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="si:IOException">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="si:IOException" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[exception]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_2" />
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Loads all the unique regions from dt_Employees to lst_UniqueRegions in order to give the user a list of regions to choose from." DisplayName="Load unique regions" sap:VirtualizedContainerService.HintSize="334,162.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="560,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Unique region loading started...&quot;]" />
      <Assign sap:VirtualizedContainerService.HintSize="560,59.6" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(x:String)">[lst_UniqueRegions]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_Employees]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="560,630.4" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Employee" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,509.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[Not lst_UniqueRegions.Contains(Employee(&quot;Region&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="484,417.6" sap2010:WorkflowViewState.IdRef="If_1">
                <If.Then>
                  <Sequence DisplayName="Fill lst_UniqueRegions" sap:VirtualizedContainerService.HintSize="280,227.2" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="238,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="scg:List(x:String)">[lst_UniqueRegions]</InArgument>
                      </InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="x:String">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Employee(&quot;Region&quot;).ToString" />
                      </InArgument>
                    </InvokeMethod>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="560,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Unique regions loaded.&quot;]" />
    </Sequence>
    <Flowchart DisplayName="Check if region not empty" sap:VirtualizedContainerService.HintSize="654,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
          <av:Size x:Key="ShapeSize">60,75.2</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,145</av:PointCollection>
          <x:Double x:Key="Width">620</x:Double>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Flowchart.StartNode>
        <x:Reference>__ReferenceID0</x:Reference>
      </Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID0">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,145</av:Point>
            <av:Size x:Key="ShapeSize">200,130</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,275 300,305 299.2,305 299.2,324</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InputDialog OptionsString="{x:Null}" sap2010:Annotation.AnnotationText="Gives the user a list of unique regions to choose from. Region is then saved in ChosenRegion." DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,342.8" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="Please select a region to create a sheet off all employees from that region" Options="[lst_UniqueRegions.ToArray]" Title="Choose region">
          <ui:InputDialog.Result>
            <OutArgument x:TypeArguments="x:String">[ChosenRegion]</OutArgument>
          </ui:InputDialog.Result>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InputDialog>
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="If true ChosenRegion is empty." DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="153.6,132" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
            <FlowDecision.Condition>
              <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="String.IsNullOrEmpty(ChosenRegion)" />
            </FlowDecision.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <av:Point x:Key="ShapeLocation">222.4,324</av:Point>
                <av:Size x:Key="ShapeSize">153.6,132</av:Size>
                <av:PointCollection x:Key="TrueConnector">222.4,390 100,390 100,326.2</av:PointCollection>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <av:PointCollection x:Key="FalseConnector">376,390 520,390 520,386.2</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">0,273.8</av:Point>
                    <av:Size x:Key="ShapeSize">200,52.4</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">100,273.8 100,210 200,210</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:03" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="200,52.4" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Please choose a region.&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MessageBox>
                <FlowStep.Next>
                  <x:Reference>__ReferenceID0</x:Reference>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">420,333.8</av:Point>
                    <av:Size x:Key="ShapeSize">200,52.4</av:Size>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52.4" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;ChosenRegion is not nothing: &quot; + ChosenRegion]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
    </Flowchart>
  </Sequence>
</Activity>